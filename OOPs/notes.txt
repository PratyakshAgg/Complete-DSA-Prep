Access Modifiers are of three types: Public, Private, Protected. Private is enabled
by default in c++.

Constructor: It is a method that is invoked when an oject of a class is created.
It has the same name as the class. It has no return type. It has to be made public.

Encapsulation: Encapsulation in C++ is defined as the wrapping up of data and 
information in a single unit. In Object Oriented Programming, Encapsulation is 
defined as binding together the data and the functions that manipulate them.
Two Important  property of Encapsulation:
1. Data Protection
2. Information Hiding

Abstraction: Abstraction means displaying only essential information and hiding 
the details. Data abstraction refers to providing only essential information 
about the data to the outside world, hiding the background details or implementation.
Consider a real-life example of a man driving a car. The man only knows that 
pressing the accelerator will increase the speed of the car or applying brakes 
will stop the car but he does not know how on pressing the accelerator the speed 
is actually increasing, he does not know about the inner mechanism of the car or 
the implementation of the accelerator, brakes, etc in the car. This is what 
abstraction is. 

Virtual Function: A virtual function in C++ is a base class member function 
that you can redefine in a derived class to achieve polymorphism. 
You can declare the function in the base class using the virtual keyword.

Inheritance: The capability of a class to derive properties and characteristics 
from another class is called Inheritance.

Polymorphism: The word “polymorphism” means having many forms. In simple words, 
we can define polymorphism as the ability of a message to be displayed in more 
than one form. A real-life example of polymorphism is a person who at the same 
time can have different characteristics. A man at the same time is a father, 
a husband, and an employee. So the same person exhibits different behavior in 
different situations. This is called polymorphism. The most common use of 
polymorphism is when a parent class reference is used to refer to a child 
class object.